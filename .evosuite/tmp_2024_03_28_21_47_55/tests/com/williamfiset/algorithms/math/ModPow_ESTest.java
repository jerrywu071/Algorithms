/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 29 02:00:51 GMT 2024
 */

package com.williamfiset.algorithms.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.williamfiset.algorithms.math.ModPow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModPow_ESTest extends ModPow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModPow.modPow((-413L), (-413L), 233L);
      ModPow modPow0 = new ModPow();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "H";
      stringArray0[2] = "X*R9y\"FJN_Hj=}MRS)`";
      stringArray0[3] = "NH@^[r|])SR}<>e6";
      // Undeclared exception!
      ModPow.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModPow modPow0 = new ModPow();
      ModPow.randLong();
      ModPow.randLong();
      ModPow.randLong();
      // Undeclared exception!
      try { 
        ModPow.randLong(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModPow.modPow(1567L, 1567L, 1567L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModPow.randLong(1477L);
      ModPow modPow0 = new ModPow();
      ModPow.randLong(1477L);
      ModPow.randLong(1477L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = 0L;
      // Undeclared exception!
      try { 
        ModPow.modPow(0L, 0L, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // mod must be > 0
         //
         verifyException("com.williamfiset.algorithms.math.ModPow", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      ModPow.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ModPow.randLong(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long long0 = (-2442L);
      long long1 = 2589L;
      // Undeclared exception!
      try { 
        ModPow.modPow(0L, (-2442L), 2589L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // If n < 0 then must have gcd(a, mod) = 1
         //
         verifyException("com.williamfiset.algorithms.math.ModPow", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ModPow.modPow((-5L), (-5L), (-1447L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // mod must be > 0
         //
         verifyException("com.williamfiset.algorithms.math.ModPow", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ModPow.randLong();
      // Undeclared exception!
      ModPow.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModPow.modPow(2468L, 2468L, 6L);
      // Undeclared exception!
      try { 
        ModPow.randLong((-995L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModPow modPow0 = new ModPow();
      ModPow.modPow(0L, 0L, 2505L);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]}s";
      stringArray0[1] = "yu2l(fz\"xi`(}KR}KGZ";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      // Undeclared exception!
      ModPow.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = 0L;
      long long1 = 819L;
      ModPow.modPow((-715L), 0L, 819L);
      ModPow.randLong();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "g|Dh.yg%TVyB;j=]";
      stringArray0[1] = "Es-Q.";
      stringArray0[2] = "b|iH>Z";
      stringArray0[3] = "";
      stringArray0[4] = " ";
      stringArray0[5] = "mod must be > 0";
      // Undeclared exception!
      ModPow.main(stringArray0);
  }
}
